buildscript {
    repositories {
        maven {
            url 'https://plugins.gradle.org/m2/'
            mavenCentral()
            maven { url 'http://jcenter.bintray.com' }
        }
    }
    dependencies {
        classpath 'com.netflix.nebula:nebula-dependency-recommender:3.6.3'
        classpath 'com.blackducksoftware.integration:hub-gradle-plugin:5.0.0'
    }
}

apply plugin: 'com.blackducksoftware.hub'

allprojects{
    apply plugin: 'java'
    apply plugin: 'eclipse'
    apply plugin: 'jacoco'
    apply plugin: 'nebula.dependency-recommender'

    dependencyRecommendations {
        dependencyLock file: file("$rootDir/dependencies.lock")
    }

    repositories {
    	mavenCentral()
    }
}

subprojects {
  //Setup default test behavior, including failure logging
  test {
      testLogging {
          exceptionFormat 'full'

          quiet {
              events 'failed'
          }

          info {
              events 'skipped', 'failed', 'passed'
          }

          debug {
              events 'started', 'standard_out', 'standard_error', 'skipped', 'failed', 'passed'
          }
      }

      useTestNG() {
          useDefaultListeners = true
      }
  }
}

task wrapper(type: Wrapper) {
    gradleVersion = "${gradleVersion}"
}

buildBom{
	deployHubBdio false
}

//Create an aggregated jacoco report
task codeCoverageReport(type: JacocoReport) {
    executionData fileTree(project.rootDir.absolutePath).include("**/build/jacoco/*.exec")

    subprojects.each {
        sourceSets it.sourceSets.main
    }

    reports {
        xml.enabled true
        xml.destination "${buildDir}/reports/jacoco/report.xml"
        html.enabled false
        csv.enabled false
    }
}

codeCoverageReport.dependsOn {
    subprojects*.test
}
